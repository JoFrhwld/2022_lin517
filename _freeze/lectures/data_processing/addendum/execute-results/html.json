{
  "hash": "999795c1a18d24b5d8911d299dfe569c",
  "result": {
    "markdown": "---\ntitle: \"Addendum\"\nauthor:\n  - name: Josef Fruehwald\n    url: https://jofrhwld.github.io/\ndate: \"2022-9-13\"\nknitr: \n  opts_chunk: \n    echo: false\n    message: false\n    warning: false\ncategories:\n  - \"data\"\neditor: visual\n---\n\n\n## `nltk` vs `spaCy`\n\nIn the lecture notes before, I showed you how to do tokenizing in the python package `nltk`. But there's another big NLP package out there called [`spaCy`](https://spacy.io/). Why did I focus on nltk? I think I can best explain that with this graph:\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](addendum_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Tokenizing with spaCy\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.zsh .cell-code}\n# bash\npython -m spacy download en_core_web_sm\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport spacy\n\nnlp = spacy.load(\"en_core_web_sm\")\nphrase2 = \"\"\"\nCATS had a budget of $100,000,000, most of which \nwent into the so-called 'digital fur technology'. \nIt's a little hard to believe, but it only made \n$75.5 million at the box office. #badmovie :-P\n\"\"\"\n\ndoc = nlp(phrase2.strip().replace(\"\\n\", \" \"))\n```\n:::\n\n\n```{.python .cell-code}\nfor token in doc:\n  print(f\"| `{token.text}`\", end = \" \")\n```\n\n| `CATS` | `had` | `a` | `budget` | `of` | `$` | `100,000,000` | `,` | `most` | `of` | `which` | ` ` | `went` | `into` | `the` | `so` | `-` | `called` | `'` | `digital` | `fur` | `technology` | `'` | `.` | ` ` | `It` | `'s` | `a` | `little` | `hard` | `to` | `believe` | `,` | `but` | `it` | `only` | `made` | ` ` | `$` | `75.5` | `million` | `at` | `the` | `box` | `office` | `.` | `#` | `badmovie` | `:-P` \n",
    "supporting": [
      "addendum_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}